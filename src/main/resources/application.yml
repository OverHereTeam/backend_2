# src/resources/application.yml
springdoc:
  swagger-ui:
    path: /swagger-ui.html  # Swagger UI 접근 경로
    operations-sorter: method  # API 정렬 방식 (method 기준)
  api-docs:
    path: /v3/api-docs  # OpenAPI JSON 문서 경로


spring:
  # .env import
  config:
    import: optional:file:.env[.properties]
  application:
    name: backend
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-name: kakao
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            redirect-uri: ${KAKAO_REDIRECT_URI}
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            scope:
              - profile_nickname
              - profile_image
              - account_email
          naver:
            client-name: naver
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            redirect-uri: ${NAVER_REDIRECT_URI}
            authorization-grant-type: authorization_code
            scope:
              - nickname
              - email
              - profile_image
          google:
            client-name: google
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: ${GOOGLE_REDIRECT_URI}
            authorization-grant-type: authorization_code
            scope:
              - profile
              - email

        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize #인증서버
            token-uri: https://kauth.kakao.com/oauth/token # Access 토큰
            user-info-uri: https://kapi.kakao.com/v2/user/me #유저정보
            user-name-attribute: id  # 카카오는 기본적으로 id를 사용자 고유 식별자로 사용
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response


  jwt:
    secret: ${JWT_SECRET}
  jackson:
    time-zone: Asia/Seoul
  datasource:
    url: jdbc:mysql://localhost:3306/${DATABASE_NAME}?serverTimezone=Asia/Seoul
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: ${LOCAL_DDL_TYPE}

gpt:
  key: ${GPT_KEY}

api:
  key: ${API_KEY}

logging:
  level:
    org.springframework.web: DEBUG
    org.springframework.web.filter: DEBUG
    org.springframework.web.servlet: DEBUG

